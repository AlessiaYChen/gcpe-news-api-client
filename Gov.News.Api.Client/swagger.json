{
  "swagger": "2.0",
  "info": {
    "title": "BC Gov News API Service 1.0",
    "description": "News API",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0"
    },
    "version": "1.0"
  },
  "paths": {
    "/api/Home": {
      "get": {
        "tags": [
          "Home"
        ],
        "summary": "Returns the top level content for the home page",
        "operationId": "Home_Get",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "api-version",
            "description": "The requested API version",
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Home"
            }
          }
        }
      }
    },
    "/api/Ministries": {
      "get": {
        "tags": [
          "Ministries"
        ],
        "summary": "Get all ministries",
        "operationId": "Ministries_GetAll",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "api-version",
            "description": "The requested API version",
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Ministry"
              }
            }
          }
        }
      }
    },
    "/api/Ministries/{key}": {
      "get": {
        "tags": [
          "Ministries"
        ],
        "summary": "Get the Ministry associated with the ministry key",
        "operationId": "Ministries_GetOne",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "key",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The requested API version",
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Ministry"
            }
          }
        }
      }
    },
    "/api/Ministries/{key}/Minister": {
      "get": {
        "tags": [
          "Ministries"
        ],
        "summary": "Get the Minister associated with the ministry key",
        "operationId": "Ministries_GetMinister",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "key",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The requested API version",
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Minister"
            }
          }
        }
      }
    },
    "/api/Newsletters": {
      "get": {
        "tags": [
          "Newsletters"
        ],
        "summary": "Get all newsletters",
        "operationId": "Newsletters_GetAll",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "api-version",
            "description": "The requested API version",
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Newsletter"
              }
            }
          }
        }
      }
    },
    "/api/Newsletters/{newsletterKey}": {
      "get": {
        "tags": [
          "Newsletters"
        ],
        "summary": "Get a specific newsletter",
        "operationId": "Newsletters_GetOne",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "newsletterKey",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The requested API version",
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Newsletter"
            }
          }
        }
      }
    },
    "/api/Newsletters/{newsletterKey}/Editions/{editionKey}": {
      "get": {
        "tags": [
          "Newsletters"
        ],
        "summary": "Returns a specific edition of a newsletter",
        "operationId": "Newsletters_GetEdition",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "newsletterKey",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "editionKey",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The requested API version",
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Edition"
            }
          }
        }
      }
    },
    "/api/Newsletters/{newsletterKey}/Editions/{editionKey}/Articles/{articleKey}": {
      "get": {
        "tags": [
          "Newsletters"
        ],
        "summary": "Get an article belonging to a Newsletter edition",
        "operationId": "Newsletters_GetArticle",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "newsletterKey",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "editionKey",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "articleKey",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The requested API version",
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Article"
            }
          }
        }
      }
    },
    "/api/Newsletters/Images/{guid}": {
      "get": {
        "tags": [
          "Newsletters"
        ],
        "summary": "Get the image object reference by of a Newsletter Edition associated with the image guid",
        "operationId": "Newsletters_GetImage",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "guid",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The requested API version",
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EditionImage"
            }
          }
        }
      }
    },
    "/api/Posts/{key}": {
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Get the post associated with the key",
        "operationId": "Posts_GetOne",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "key",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The requested API version",
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          }
        }
      }
    },
    "/api/Posts": {
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Get the posts associated with the keys in the list passed in.",
        "operationId": "Posts_Get",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "postKeys",
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": ""
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The requested API version",
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Post"
              }
            }
          }
        }
      }
    },
    "/api/Posts/Latest/{indexKind}/{indexKey}": {
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Get the latest posts of postKind for the specified index (default or category)",
        "operationId": "Posts_GetLatest",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "indexKind",
            "description": "home or one of categories",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "indexKey",
            "description": "default or one key of the categories (ministries, sectors, services, tags, themes)",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "postKind",
            "description": "One of: releases, stories, factsheets, updates or default (releases+stories except top/feature for categories)",
            "type": "string",
            "default": ""
          },
          {
            "in": "query",
            "name": "count",
            "description": "number of posts to return",
            "type": "integer",
            "format": "int32",
            "default": 50
          },
          {
            "in": "query",
            "name": "skip",
            "description": "number of posts to skip",
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The requested API version",
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Post"
              }
            }
          }
        }
      }
    },
    "/api/Posts/Keys/{indexKind}/{indexKey}": {
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Get all keys for the specified index (newsroom or category)",
        "operationId": "Posts_GetAllKeys",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "indexKind",
            "description": "home or one of categories",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "indexKey",
            "description": "default or one key of the categories (ministries, sectors, services, tags, themes)",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "postKind",
            "description": "One of: releases, stories, factsheets, updates or default (releases+stories+factsheets)",
            "type": "string",
            "default": ""
          },
          {
            "in": "query",
            "name": "count",
            "description": "number of posts to return",
            "type": "integer",
            "format": "int32",
            "default": ""
          },
          {
            "in": "query",
            "name": "skip",
            "description": "number of posts to skip",
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The requested API version",
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/KeyValuePair2"
              }
            }
          }
        }
      }
    },
    "/api/Posts/Keys/{reference}": {
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Get the post key associated with the reference.",
        "operationId": "Posts_GetKeyFromReference",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "reference",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The requested API version",
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KeyValuePair2"
            }
          }
        }
      }
    },
    "/api/Posts/LatestMediaUri/{mediaType}": {
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Gets the latest Social Media post for the social media type passed in.",
        "operationId": "Posts_GetLatestMediaUri",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "mediaType",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The requested API version",
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "uri",
              "type": "string"
            }
          }
        }
      }
    },
    "/api/ResourceLinks": {
      "get": {
        "tags": [
          "ResourceLinks"
        ],
        "summary": "Get all resource links",
        "operationId": "ResourceLinks_GetAll",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "api-version",
            "description": "The requested API version",
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceLink"
              }
            }
          }
        }
      }
    },
    "/api/Sectors": {
      "get": {
        "tags": [
          "Sectors"
        ],
        "summary": "Get all Sectors",
        "operationId": "Sectors_GetAll",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "api-version",
            "description": "The requested API version",
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Sector"
              }
            }
          }
        }
      }
    },
    "/api/Sectors/{key}": {
      "get": {
        "tags": [
          "Sectors"
        ],
        "summary": "Get the sector associated with the key",
        "operationId": "Sectors_GetOne",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "key",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The requested API version",
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Sector"
            }
          }
        }
      }
    },
    "/api/Slides/{id}": {
      "get": {
        "tags": [
          "Slides"
        ],
        "summary": "Get the slide associated to the id",
        "operationId": "Slides_GetOne",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The requested API version",
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Slide"
            }
          }
        }
      }
    },
    "/api/Slides": {
      "get": {
        "tags": [
          "Slides"
        ],
        "summary": "Get all Slides",
        "operationId": "Slides_GetAll",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "api-version",
            "description": "The requested API version",
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Slide"
              }
            }
          }
        }
      }
    },
    "/api/Subscribe/SubscriptionItems/{categoryKey}": {
      "get": {
        "tags": [
          "Subscribe"
        ],
        "summary": "The items of a particular category (e.g ministries, sectors, tags, services, newsletters, emergency) available for subscription.",
        "operationId": "Subscribe_SubscriptionItems",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "categoryKey",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The requested API version",
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/KeyValuePair2"
              }
            }
          }
        }
      }
    },
    "/api/Subscribe/CreateNewsOnDemandEmailSubscriptionWithPreferences": {
      "post": {
        "tags": [
          "Subscribe"
        ],
        "summary": "Create a NewsOnDemand subscription for the provided subscriberInfo.",
        "operationId": "Subscribe_CreateNewsOnDemandEmailSubscriptionWithPreferences",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "api-version",
            "description": "The requested API version",
            "type": "string",
            "default": ""
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/SubscriberInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Subscribe/ConfirmUpdateCreateSubscription/{tokenGuid}": {
      "get": {
        "tags": [
          "Subscribe"
        ],
        "summary": "Confirm that the subscription with tokenGuid has been created",
        "operationId": "Subscribe_ConfirmUpdateCreateSubscription",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tokenGuid",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The requested API version",
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SubscriberInfo"
            }
          }
        }
      }
    },
    "/api/Subscribe/UpdateNewsOnDemandEmailSubscriptionWithPreferences/{tokenGuid}": {
      "post": {
        "tags": [
          "Subscribe"
        ],
        "summary": "Update an existing NOD subscription",
        "operationId": "Subscribe_UpdateNewsOnDemandEmailSubscriptionWithPreferences",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tokenGuid",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The requested API version",
            "type": "string",
            "default": ""
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/SubscriberInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Subscribe/ManageNewsOnDemandEmailSubscription/{emailAddress}": {
      "get": {
        "tags": [
          "Subscribe"
        ],
        "summary": "Manage an NOD email subscription identified by the passed email address",
        "operationId": "Subscribe_ManageNewsOnDemandEmailSubscription",
        "parameters": [
          {
            "in": "path",
            "name": "emailAddress",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The requested API version",
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Subscribe/CheckEmailActivationToken/{tokenGuid}": {
      "get": {
        "tags": [
          "Subscribe"
        ],
        "summary": "Check an email activation for a specific token",
        "operationId": "Subscribe_CheckEmailActivationToken",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tokenGuid",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The requested API version",
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/api/Subscribe/UnsubscribeSubscriber/{tokenGuid}": {
      "get": {
        "tags": [
          "Subscribe"
        ],
        "summary": "Unsubscribe the user identified by the passed tokenGuid.",
        "operationId": "Subscribe_UnsubscribeSubscriber",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tokenGuid",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The requested API version",
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/api/Tags": {
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "Get all Tags",
        "operationId": "Tags_GetAll",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "api-version",
            "description": "The requested API version",
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Tag"
              }
            }
          }
        }
      }
    },
    "/api/Tags/{key}": {
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "Get the Tag associated with the key",
        "operationId": "Tags_GetOne",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "key",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The requested API version",
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Tag"
            }
          }
        }
      }
    },
    "/api/Themes": {
      "get": {
        "tags": [
          "Themes"
        ],
        "summary": "Get all Themes",
        "operationId": "Themes_GetAll",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "api-version",
            "description": "The requested API version",
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Theme"
              }
            }
          }
        }
      }
    },
    "/api/Themes/{key}": {
      "get": {
        "tags": [
          "Themes"
        ],
        "summary": "Get the Theme associated with the key",
        "operationId": "Themes_GetOne",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "key",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The requested API version",
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Theme"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "DayOfWeek": {
      "format": "int32",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "type": "integer",
      "x-ms-enum": {
        "name": "DayOfWeek",
        "modelAsString": true
      }
    },
    "TimeSpan": {
      "type": "object",
      "properties": {
        "ticks": {
          "format": "int64",
          "type": "integer",
          "readOnly": true
        },
        "days": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "hours": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "milliseconds": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "minutes": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "seconds": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "totalDays": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "totalHours": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "totalMilliseconds": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "totalMinutes": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "totalSeconds": {
          "format": "double",
          "type": "number",
          "readOnly": true
        }
      }
    },
    "DataModel": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "readOnly": true
        },
        "memoryCachable": {
          "type": "boolean",
          "readOnly": true
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "DataIndex": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataModel"
        },
        {
          "type": "object",
          "properties": {
            "kind": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "topPostKey": {
              "type": "string"
            },
            "featurePostKey": {
              "type": "string"
            },
            "memoryCachable": {
              "type": "boolean",
              "readOnly": true
            }
          }
        }
      ]
    },
    "Home": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataIndex"
        },
        {
          "type": "object",
          "properties": {
            "liveWebcastFlashMediaManifestUrl": {
              "type": "string"
            },
            "liveWebcastM3uPlaylist": {
              "type": "string"
            },
            "granville": {
              "type": "string"
            },
            "topPostKey": {
              "type": "string"
            },
            "featurePostKey": {
              "type": "string"
            },
            "memoryCachable": {
              "type": "boolean",
              "readOnly": true
            }
          }
        }
      ]
    },
    "UriHostNameType": {
      "format": "int32",
      "enum": [
        0,
        1,
        2,
        3,
        4
      ],
      "type": "integer",
      "x-ms-enum": {
        "name": "UriHostNameType",
        "modelAsString": true
      }
    },
    "ResourceLink": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataModel"
        },
        {
          "type": "object",
          "properties": {
            "memoryCachable": {
              "type": "boolean",
              "readOnly": true
            },
            "uri": {
              "format": "uri",
              "type": "string"
            }
          }
        }
      ]
    },
    "Contact": {
      "type": "object",
      "properties": {
        "fullName": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "mobileNumber": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        }
      }
    },
    "Category": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataIndex"
        },
        {
          "type": "object",
          "properties": {
            "twitterFeedUsername": {
              "type": "string",
              "readOnly": true
            },
            "flickrUri": {
              "format": "uri",
              "type": "string",
              "readOnly": true
            },
            "youtubeUri": {
              "format": "uri",
              "type": "string",
              "readOnly": true
            },
            "audioUri": {
              "format": "uri",
              "type": "string",
              "readOnly": true
            },
            "isActive": {
              "type": "boolean",
              "readOnly": true
            },
            "topPostKey": {
              "type": "string"
            },
            "featurePostKey": {
              "type": "string"
            },
            "memoryCachable": {
              "type": "boolean",
              "readOnly": true
            }
          }
        }
      ]
    },
    "Ministry": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Category"
        },
        {
          "type": "object",
          "properties": {
            "childMinistryKey": {
              "type": "string"
            },
            "parentMinistryKey": {
              "type": "string"
            },
            "ministryUrl": {
              "format": "uri",
              "type": "string"
            },
            "displayAdditionalName": {
              "type": "string"
            },
            "topicLinks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceLink"
              }
            },
            "serviceLinks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceLink"
              }
            },
            "newsletterLinks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceLink"
              }
            },
            "ministerName": {
              "type": "string"
            },
            "contactUser": {
              "allOf": [
                {
                  "$ref": "#/definitions/Contact"
                }
              ]
            },
            "secondContactUser": {
              "allOf": [
                {
                  "$ref": "#/definitions/Contact"
                }
              ]
            },
            "weekendContactNumber": {
              "type": "string"
            },
            "twitterFeedUsername": {
              "type": "string",
              "readOnly": true
            },
            "flickrUri": {
              "format": "uri",
              "type": "string",
              "readOnly": true
            },
            "youtubeUri": {
              "format": "uri",
              "type": "string",
              "readOnly": true
            },
            "audioUri": {
              "format": "uri",
              "type": "string",
              "readOnly": true
            },
            "isActive": {
              "type": "boolean",
              "readOnly": true
            },
            "topPostKey": {
              "type": "string"
            },
            "featurePostKey": {
              "type": "string"
            },
            "memoryCachable": {
              "type": "boolean",
              "readOnly": true
            }
          }
        }
      ]
    },
    "Minister": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataModel"
        },
        {
          "type": "object",
          "properties": {
            "headline": {
              "type": "string",
              "readOnly": true
            },
            "summary": {
              "type": "string",
              "readOnly": true
            },
            "details": {
              "type": "string",
              "readOnly": true
            },
            "emailHtml": {
              "type": "string",
              "readOnly": true
            },
            "photo": {
              "type": "string",
              "readOnly": true
            },
            "post": {
              "type": "string",
              "readOnly": true
            },
            "memoryCachable": {
              "type": "boolean",
              "readOnly": true
            }
          }
        }
      ]
    },
    "KeyValuePair2": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "readOnly": true
        },
        "value": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Newsletter": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataModel"
        },
        {
          "type": "object",
          "properties": {
            "memoryCachable": {
              "type": "boolean",
              "readOnly": true
            },
            "name": {
              "type": "string"
            },
            "ministryName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "editions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/KeyValuePair2"
              }
            }
          }
        }
      ]
    },
    "Edition": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataModel"
        },
        {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "htmlBody": {
              "type": "string"
            },
            "memoryCachable": {
              "type": "boolean",
              "readOnly": true
            }
          }
        }
      ]
    },
    "Article": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataModel"
        },
        {
          "type": "object",
          "properties": {
            "memoryCachable": {
              "type": "boolean",
              "readOnly": true
            },
            "editionName": {
              "type": "string"
            },
            "htmlBody": {
              "type": "string"
            }
          }
        }
      ]
    },
    "EditionImage": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataModel"
        },
        {
          "type": "object",
          "properties": {
            "memoryCachable": {
              "type": "boolean",
              "readOnly": true
            },
            "fileName": {
              "type": "string"
            },
            "imageBytes": {
              "format": "byte",
              "type": "string",
              "readOnly": true
            },
            "imageType": {
              "type": "string"
            }
          }
        }
      ]
    },
    "DocumentContact": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "details": {
          "type": "string"
        }
      }
    },
    "Document": {
      "type": "object",
      "properties": {
        "pageTitle": {
          "type": "string",
          "readOnly": true
        },
        "languageId": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "headline": {
          "type": "string",
          "readOnly": true
        },
        "subheadline": {
          "type": "string",
          "readOnly": true
        },
        "detailsHtml": {
          "type": "string",
          "readOnly": true
        },
        "byline": {
          "type": "string",
          "readOnly": true
        },
        "contacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentContact"
          }
        }
      }
    },
    "Asset": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "length": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "Post": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataModel"
        },
        {
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "readOnly": true
            },
            "atomId": {
              "type": "string",
              "readOnly": true
            },
            "summary": {
              "type": "string",
              "readOnly": true
            },
            "socialMediaSummary": {
              "type": "string",
              "readOnly": true
            },
            "socialMediaHeadline": {
              "type": "string",
              "readOnly": true
            },
            "keywords": {
              "type": "string",
              "readOnly": true
            },
            "publishDate": {
              "format": "date-time",
              "type": "string",
              "readOnly": true
            },
            "leadMinistryKey": {
              "type": "string"
            },
            "hasMediaAssets": {
              "type": "boolean"
            },
            "hasTranslations": {
              "type": "boolean"
            },
            "isNewsOnDemand": {
              "type": "boolean"
            },
            "assetUrl": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "documents": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Document"
              }
            },
            "reference": {
              "type": "string"
            },
            "redirectUri": {
              "format": "uri",
              "type": "string"
            },
            "ministryKeys": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "sectorKeys": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "tagKeys": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "themeKeys": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "azureAssets": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Asset"
              },
              "readOnly": true
            },
            "azureTranslations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Asset"
              },
              "readOnly": true
            },
            "memoryCachable": {
              "type": "boolean",
              "readOnly": true
            }
          }
        }
      ]
    },
    "Sector": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Category"
        },
        {
          "type": "object",
          "properties": {
            "twitterFeedUsername": {
              "type": "string",
              "readOnly": true
            },
            "flickrUri": {
              "format": "uri",
              "type": "string",
              "readOnly": true
            },
            "youtubeUri": {
              "format": "uri",
              "type": "string",
              "readOnly": true
            },
            "audioUri": {
              "format": "uri",
              "type": "string",
              "readOnly": true
            },
            "isActive": {
              "type": "boolean",
              "readOnly": true
            },
            "topPostKey": {
              "type": "string"
            },
            "featurePostKey": {
              "type": "string"
            },
            "memoryCachable": {
              "type": "boolean",
              "readOnly": true
            }
          }
        }
      ]
    },
    "Slide": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataModel"
        },
        {
          "type": "object",
          "properties": {
            "headline": {
              "type": "string"
            },
            "summary": {
              "type": "string"
            },
            "actionLabel": {
              "type": "string"
            },
            "actionUri": {
              "format": "uri",
              "type": "string"
            },
            "image": {
              "format": "byte",
              "type": "string"
            },
            "facebookPostUri": {
              "format": "uri",
              "type": "string"
            },
            "justify": {
              "type": "string",
              "readOnly": true
            },
            "imageType": {
              "type": "string",
              "readOnly": true
            },
            "memoryCachable": {
              "type": "boolean",
              "readOnly": true
            }
          }
        }
      ]
    },
    "SubscriberInfo": {
      "type": "object",
      "properties": {
        "emailAddress": {
          "type": "string"
        },
        "subscribedCategories": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "isAllNews": {
          "type": "boolean"
        },
        "isAsItHappens": {
          "type": "boolean"
        },
        "isDailyDigest": {
          "type": "boolean"
        },
        "isAdminRegistration": {
          "type": "boolean"
        },
        "notifyIfNewCategories": {
          "type": "boolean"
        },
        "expiredLinkOrUnverifiedEmail": {
          "type": "boolean"
        }
      }
    },
    "Tag": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Category"
        },
        {
          "type": "object",
          "properties": {
            "twitterFeedUsername": {
              "type": "string",
              "readOnly": true
            },
            "flickrUri": {
              "format": "uri",
              "type": "string",
              "readOnly": true
            },
            "youtubeUri": {
              "format": "uri",
              "type": "string",
              "readOnly": true
            },
            "audioUri": {
              "format": "uri",
              "type": "string",
              "readOnly": true
            },
            "isActive": {
              "type": "boolean",
              "readOnly": true
            },
            "topPostKey": {
              "type": "string"
            },
            "featurePostKey": {
              "type": "string"
            },
            "memoryCachable": {
              "type": "boolean",
              "readOnly": true
            }
          }
        }
      ]
    },
    "Theme": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Category"
        },
        {
          "type": "object",
          "properties": {
            "twitterFeedUsername": {
              "type": "string",
              "readOnly": true
            },
            "flickrUri": {
              "format": "uri",
              "type": "string",
              "readOnly": true
            },
            "youtubeUri": {
              "format": "uri",
              "type": "string",
              "readOnly": true
            },
            "audioUri": {
              "format": "uri",
              "type": "string",
              "readOnly": true
            },
            "isActive": {
              "type": "boolean",
              "readOnly": true
            },
            "topPostKey": {
              "type": "string"
            },
            "featurePostKey": {
              "type": "string"
            },
            "memoryCachable": {
              "type": "boolean",
              "readOnly": true
            }
          }
        }
      ]
    }
  }
}